/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Create Prompt API endpoint
 *   version: 2023-10-31
 */

/**
 * AI assistant create prompt settings.
 */
export type PromptCreateProps = z.infer<typeof PromptCreateProps>;
export const PromptCreateProps = z.object({
  /**
   * Prompt content.
   */
  content: z.string(),
  /**
   * Prompt name.
   */
  name: z.string(),
  /**
   * Prompt type.
   */
  promptType: z.string(),
  /**
   * Is default prompt.
   */
  isDefault: z.boolean().optional(),
  /**
   * Is shared prompt.
   */
  isShared: z.boolean().optional(),
  /**
   * Is default prompt.
   */
  isNewConversationDefault: z.boolean().optional(),
});

/**
 * AI assistant update prompt settings.
 */
export type PromptUpdateProps = z.infer<typeof PromptUpdateProps>;
export const PromptUpdateProps = z.object({
  /**
   * Prompt content.
   */
  content: z.string().optional(),
  /**
   * Prompt name.
   */
  name: z.string().optional(),
  /**
   * Prompt type.
   */
  promptType: z.string().optional(),
  /**
   * Is shared prompt.
   */
  isShared: z.boolean().optional(),
  /**
   * Is default prompt.
   */
  isNewConversationDefault: z.boolean().optional(),
});

/**
 * AI assistant prompt.
 */
export type PromptResponse = z.infer<typeof PromptResponse>;
export const PromptResponse = z.object({
  id: z.string(),
  /**
   * Prompt content.
   */
  content: z.string(),
  /**
   * Prompt name.
   */
  name: z.string().optional(),
  /**
   * Prompt type.
   */
  promptType: z.string().optional(),
  /**
   * Is default prompt.
   */
  isDefault: z.boolean().optional(),
  /**
   * Is shared prompt.
   */
  isShared: z.boolean().optional(),
  /**
   * Is default prompt.
   */
  isNewConversationDefault: z.boolean().optional(),
  /**
   * The last time prompt was updated.
   */
  updatedAt: z.string().optional(),
  /**
   * The last time prompt was updated.
   */
  createdAt: z.string().optional(),
  /**
   * User who was updated prompt.
   */
  updatedBy: z.string().optional(),
  /**
   * User who was created prompt.
   */
  createdBy: z.string().optional(),
});

export type CreatePromptRequestBody = z.infer<typeof CreatePromptRequestBody>;
export const CreatePromptRequestBody = PromptCreateProps;
export type CreatePromptRequestBodyInput = z.input<typeof CreatePromptRequestBody>;

export type CreatePromptResponse = z.infer<typeof CreatePromptResponse>;
export const CreatePromptResponse = PromptResponse;

export type DeletePromptRequestParams = z.infer<typeof DeletePromptRequestParams>;
export const DeletePromptRequestParams = z.object({
  /**
   * The prompt's `id` value.
   */
  id: z.string(),
});
export type DeletePromptRequestParamsInput = z.input<typeof DeletePromptRequestParams>;

export type DeletePromptResponse = z.infer<typeof DeletePromptResponse>;
export const DeletePromptResponse = PromptResponse;

export type ReadPromptRequestParams = z.infer<typeof ReadPromptRequestParams>;
export const ReadPromptRequestParams = z.object({
  /**
   * The prompt's `id` value.
   */
  id: z.string(),
});
export type ReadPromptRequestParamsInput = z.input<typeof ReadPromptRequestParams>;

export type ReadPromptResponse = z.infer<typeof ReadPromptResponse>;
export const ReadPromptResponse = PromptResponse;

export type UpdatePromptRequestParams = z.infer<typeof UpdatePromptRequestParams>;
export const UpdatePromptRequestParams = z.object({
  /**
   * The prompt's `id` value.
   */
  id: z.string(),
});
export type UpdatePromptRequestParamsInput = z.input<typeof UpdatePromptRequestParams>;

export type UpdatePromptRequestBody = z.infer<typeof UpdatePromptRequestBody>;
export const UpdatePromptRequestBody = PromptUpdateProps;
export type UpdatePromptRequestBodyInput = z.input<typeof UpdatePromptRequestBody>;

export type UpdatePromptResponse = z.infer<typeof UpdatePromptResponse>;
export const UpdatePromptResponse = PromptResponse;
